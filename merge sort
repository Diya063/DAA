#include <iostream>
using namespace std;

int merge(int arr[], int left, int mid, int right, int& count) {
    int i = left, j = mid + 1, k = left;
    int n1 = mid - left + 1, n2 = right - mid;

    int L[n1], R[n2];

    for (int i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (int j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];

    while (i <= n1 - 1 && j <= n2 - 1) {
        count++;
        if (L[i] <= R[j]) {
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }

    while (i <= n1 - 1) {
        arr[k] = L[i];
        i++;
        k++;
    }

    while (j <= n2 - 1) {
        arr[k] = R[j];
        j++;
        k++;
    }

    return mid - left + n2;
}

int mergeSort(int arr[], int left, int right, int& count) {
    int mid;
    if (left < right) {
        mid = (left + right) / 2;
        count += mergeSort(arr, left, mid, count);
        count += mergeSort(arr, mid + 1, right, count);
        count += merge(arr, left, mid, right, count);
    }
    return count;
}

int main() {
    int n;
    cout << "Enter the number of elements in the array: ";
    cin >> n;

    int arr[n];
    cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    int count = 0;
    int sorted_arr[n];
    for (int i = 0; i < n; i++) {
        sorted_arr[i] = arr[i];
    }

    int comparisons = mergeSort(sorted_arr, 0, n - 1, count);

    cout << "The sorted array is: ";
    for (int i = 0; i < n; i++) {
        cout << sorted_arr[i] << " ";
    }
    cout << endl;

    cout << "The number of comparisons made is: " << comparisons << endl;

    return 0;
}
